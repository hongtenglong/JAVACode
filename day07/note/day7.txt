
可变参数 

语法 
...

底层： 数组；

1.不传参，传多个参数，数组
2.位置放再最后
3.只能有一个可变参数

----------------------------------
递归：
  允许 程序 调用 自身 的一种技术。

条件：
  1.自己调用自己；
  2.出口。

-------------------------------------
主方法命令行传参


--------------------------------------
封装：
 隐藏类中的属性 和 实现细节，对外 提供 公共的访问方式。
  
语法：setter访问器 ，getter访问器
 public void set属性(类型 参数变量){
      this.属性 = 参数变量；
 }
 public 属性类型 get属性（）{
      return 属性；
 }
好处：
  1.安全性；
  2.其它用户 只能访问 我提供的 公共的访问方式；
  4.提供的 访问器 中 可以 使用流程控制语句 。

-------------------------------------------
方法重载：
  同一个类，方法名相同，参数列表不同（类型，个数，顺序），与返回值无关.
  
注意：
 可变参数重载


----------------------------------------------
构造器：

 分类：
   1.默认构造器；
   2.无参构造器。
   3.有参

this;
  当前类对象；
   调用类中成员；
   1.区分成员变量和局部变量；
   2. 调用本类构造。
    this()
    注意：  必须 在 构造中 使用；
            构造中 第一行位置。

------------------------------------
对象的初始化：
 1.系统默认初始化；
 2.声明处初始化；
 3.构造块初始化
 （2,3）看 代码中的顺序。
 4.构造器。
----------------------------------
构造器 和 普通方法区别：
 1. 构造器 作用 初始化对象；
    普通方法 作用 完成特定的功能。
 2. 构造器 创建对象时调用；
    普通方法 用对象调用，使用时随时调用。

-----------------------------------
构造器  和 访问器 区别：

1.构造器 可以一次性 为所有成员变量初始化；
  访问器 只能一个一个调用赋值；
2.构造器 ：对象 创建完成那么所有成员初始化完成；
  访问器： 对象创建完成后，需要一个一个调用赋值。




































































































