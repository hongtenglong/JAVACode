对象：
  一切 可以被描述 的事物。

属性：
  arr.length
  特征
方法：
  println()
  sort();
  动作行为

类：
 相似对象的集合。

类和对象区别：
  1.类是抽象的概念，对象是具体的。
  2.类是模板，通过 模板 创建出具体的对象。
  3.类是一个程序单元。
  4.类是一种数据类类型，引用数据类型。
--------------------------------------------
定义类：

 访问修饰符 class 类名{
    //类体；
    属性；
    方法();
 }

规范：
  类： 帕斯卡。
      Demo ,Hello，MyMath

      多个单词组成，每个单词首字母都大写。

变量：

  局部变量： 在方法中（内）定义的，或者 代码块儿中定义的。
  成员变量：属性；在类中 定义的。


-----------------------
语法：

创建对象：
  类类型  对象名 = new  类类型名相同();
  对象名.属性名

--------------------------------------------
定义方法：
public    void  返回值String,int
访问修饰符 返回值类型  方法名(参数,参数){
    方法体；
}
带返回值的方法：
  1.类型相符；
  2.返回一个结果。
  
-----------------------------------
this:

  本类对象。
  调用 本类 成员： 成员变量，成员方法；

------------------------------------
方法调用：
  不同类中， 创建对象 调用；new 
  同一个类中，方法之间可以直接互相调用省略 this. 


---------------------------------------
成员 变量 和 局部变量的区别：

1.初始值。
  局部 变量 系统 不会初始化；
  成员 变量 系统 默认初始化；
2.作用域.
  局部 变量 只在 定义 它的代码块中有效；
  成员 变量 在整个类中（内）都有效。
3.优先级。
 成员 变量和 局部变量 同名，优先使用局部变量。


--------------------------------------------
注释：
 单行
 多行
 文档javadoc 导出

---------------------------------------
参数传递：
  1.值类型
    不更改
  2.引用类型的参数
  
   （1）两个引用指向了同一个对象，所以值改变了
    (2)两个引用指向不同对象，所以 值没变。

------------------------------------------------
方法的好处：
  1.代码重用
  2.封装








  





  




























































































































