类：
单一继承：
  子类 只能有 一个父类。

子类 继承了 父类中的功能，就像自己类中定义的一样去使用。

注意：
  1.父类中 私有 private的成员 子类不能继承；
  2.子类 和父类 不在同包 ，父类中使用 了默认访问修饰符的成员。
  3.构造器不能 继承。

里氏替换原则：
  子类 是  父类。

方法重写：
  子类中；
  方法与父类中的方法 名相同；
  参数列表相同；
  返回值相同；

注意：
  1.参数列表： 相同。或者：父类擦除后 类型 与 子类相同；
  2.返回值类型：相同。或者 子类 可以是父类的子类型；
  3.访问权限； 不能比 父类更严格；
  4.异常处理； 不能比 父类范围更大。


  
为什么重写：
  1.子类 与 父类中实现的功能不同；
  2.子类 扩展了父类的功能。
    手机{
      来电显示（）{
          电话号；
       }
    }
    子类手机类{
	来电显示（）{
          电话号；
          名；
          地址；
       }
    }


---------------------------------------------
super
  调用父类的成员。
  1.子类 和父类中的成员同名，用super区分；
  2.super(参数);
    调用父类构造器。
    位置 ：子类构造器中；
           子类构造器中的第一行代码处。

-------------------------------------------------
继承的设计注意：
  1.继承的层次关系 控制在 2- 3层；
  2.精心设计继承的类：
    （1）完整的说明文档；
     （2） 尽量封装父类的细节；
          private  不需要子类继承的。
          protected 只允许子类修改的。
          public final 对所有用户开放，但是不让子类修改。

手机{

  private 存储容量；
  public int get容量(){}
  protected void set容量（）{}

}
-------------------------------------------------
创建 子类 对象时，一定会 先调用父类构造器，然后在调用子类构造器；
 
子类构造器中没有 显示的 调用super()父类构造 或者 this()自己的构造器，
 那么 系统 会 分配一个super()调用父类无参构造器。

注意：
  父类中 只显示 声明了一个带参构造，那么 子类构造器中
  必须显示 调用 父类带参构造 传参。super(参数);

------------------------------------------------------
继承的传递性：
  
子类 可以继承直接父类的功能，也可以继承 间接父类 的功能。

------------------------------------------------------
Object
（1）
  toString()显示对象信息
  在 println() print()输出 对象名时 ，会自动调用。
 （2） 
  finalize()垃圾回收之前调用
 （3）
    equals();
    比较 地址

-------------------------------------------------------
final 

 终态

修饰：

类：此类不能被继承；
  1.最终版本的类，不需要扩展功能了。
  2.为了类的安全性，不希望子类随意修改。
  3.类中的方法 有复杂的调用关系。
	

方法：此方法不能被 子类重写；
   1.父类中的方法的功能不希望被子类修改；
   2.所有的子类 都使用同一版本的父类中的方法。
  
变量：此变量的值不能被更改，常量。
   final 
   规范：大写字母
         下划线连接_
   
  特点：1.值不允许更改；
        2.便于维护；
        3.增强了可读性。

-------------------------------------------------

继承：
  派生新类：
     1.子类 增加了 属性；
       Person  类  Student 年级，班级
     2.子类  增加了 方法；
      Person 类   Teacher 讲课


继承的优势：
   1.代码重用；
   2.方便维护；

缺点：
   1.高耦合；
   2.破坏了封装。
  
--------------------------------------------------
类 之间的关系：
 继承：
   父类 和子类的关系。
   子类是父类。
 组合：
   整体 和 局部之间的关系；
   局部 组成 整体。













